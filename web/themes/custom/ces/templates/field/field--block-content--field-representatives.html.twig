{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
    label_display == 'inline' ? 'clearfix',
  ]
%}
{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{attributes.addClass(classes,'field__items')}}>
      <div class="rep__container">
        {% for item in items %}

          {% set presentative = item.content['#paragraph'] %}

          {% set region = presentative.get('field_area').value %}

          {% if presentative.get('field_image').entity is not empty %}
            {% set image_src = presentative.get('field_image').entity.get('field_media_image').entity.uri.value|file_url %}
          {% endif %}

          {% if presentative.get('field_image_hover').entity is not empty %}
            {% set image_hover_src = presentative.get('field_image_hover').entity.get('field_media_image').entity.uri.value|file_url %}
          {% endif %}

          {% set name = presentative.get('field_title').value %}

          {% if presentative.get('field_contact_link').value is not empty %}
            {% set contact_link = presentative.get('field_contact_link').value.0.uri %}
            {% set contact_link_text = presentative.get('field_contact_link').value.0.title %}
            {% set contact_link_target = presentative.get('field_contact_link').value.0.options.attributes.target %}
          {% endif %}

          <div class="rep__item">
            <a class="rep__link" href="{{ contact_link }}" target="{{ contact_link_target }}">
              {% if region is not empty %}
                <div class="rep__region">
                  <h3>
                    {{ region }}
                  </h3>
                </div>
              {% endif %}
              {% if image_src is not empty and image_hover_src is not empty %}
                <div class="rep__avatar">
                  <div class="rep__bg"></div>
                  <img class="rep__avatar__bg-img" src="{{ image_hover_src }}" alt="rep-ava-bg">
                  <img class="rep__avatar__main-img" src="{{ image_src }}" alt="rep-ava">
                </div>
              {% endif %}
              {% if name is not empty %}
                <div class="rep__name">
                  <h3>{{ name }}</h3>
                </div>
              {% endif %}
              {% if contact_link_text is not empty %}
                <div class="ces-btn rep__btn load-more">
                  {{ contact_link_text }}
                </div>
              {% endif %}
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  {% else %}
    {% for item in items %}
      <div{{attributes.addClass(classes,'field__item')}}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{attributes.addClass(classes)}}>
    <div{{title_attributes.addClass(title_classes)}}>{{ label }}</div>
    {% if multiple %}
      <div class="field__items">
      {% endif %}
      {% for item in items %}
        <div{{item.attributes.addClass('field__item')}}>{{ item.content }}</div>
      {% endfor %}
      {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
