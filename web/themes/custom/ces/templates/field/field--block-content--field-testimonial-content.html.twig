{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
    label_display == 'inline' ? 'clearfix',
  ]
%}
{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{attributes.addClass(classes,'field__items')}}>
      <div class="slide-box tes__container">
        {% for item in items %}
          {% set testimonial_body = item.content['#entity'].get('field_testimonial_body').value %}
          {% set reviewer_name = item.content['#entity'].get('field_reviewer_name').value %}
          {% set reviewer_position = item.content['#entity'].get('field_reviewer_position').value  %}
          {% if item.content['#entity'].get('field_reviewer_avatar').value[0]['target_id'] is not empty %}
            {% set tes_wrap = "tes__wrap" %}
            {% set tes_left_wrap = "tes__left-wrap" %}
            {% set tes_right_wrap = "tes__right-wrap" %}
          {% else %}
            {% set tes_wrap = "tes__wrap no-ava" %}
            {% set tes_left_wrap = "tes__left-wrap no-ava" %}
            {% set tes_right_wrap = "tes__right-wrap no-ava" %}
          {% endif %}
          <div class="{{ tes_wrap }}">
            <div class="{{ tes_left_wrap }}">
              <img class="quote-right" src="/themes/custom/ces/assets/icons/quote-right1.svg" alt="quote-right">
            </div>
            <div class="{{ tes_right_wrap }}">
              <div class="reviewer__testimonial" {{item.attributes.addClass('field__item')}}>{{ testimonial_body|raw }}</div>
              <div class="d-flex">
                {% if item.content['#entity'].field_reviewer_avatar.0.entity is not empty %}
                  {% set image_uri = item.content['#entity'].field_reviewer_avatar.0.entity|file_uri %}
                {% endif %}
                {% if image_uri is not empty %}
                  <div class="reviewer__avatar">
                    <img src={{ image_uri|image_style('reviewer_avatar') }} alt="reviewer-avatar">
                  </div>
                {% endif %}
                <div>
                  <div{{item.attributes.addClass('field__item')}}>
                    <h6 class="reviewer__name">{{ reviewer_name }}</h6>
                  </div>
                  <div {{item.attributes.addClass('field__item')}}>
                    <small class="reviewer__position">
                      {{ reviewer_position }}
                    </small>
                  </div>
                </div>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  {% else %}
    {% for item in items %}
      <div{{attributes.addClass(classes,'field__item')}}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{attributes.addClass(classes)}}>
    <div{{title_attributes.addClass(title_classes)}}>{{ label }}</div>
    {% if multiple %}
      <div class="field__items">
      {% endif %}
      {% for item in items %}
        <div{{item.attributes.addClass('field__item')}}>{{ item.content }}
        </div>
      {% endfor %}
      {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
