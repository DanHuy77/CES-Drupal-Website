{#
/**
 * @file
 * Theme override to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - in_preview: Whether the plugin is being rendered in preview mode.
 * - content: The content of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 */
#}

{{ attach_library('ces/key_insights') }}

{% set classes = [
  'block',
  'block-' ~ configuration.provider|clean_class,
  'block-' ~ plugin_id|clean_class,
  'key-insights'
] %}

<div{{attributes.addClass(classes)}}>
  {{ title_suffix }}
  {% block content %}
    {% set title = content.field_title_plain['#items'].0.value|trim %}
    {% set counters = content.field_counters %}
    {% set counters_count = counters['#items']|length %}
    <div class="key-insights-wrapper g-0">
      <div class="title">
        <p>{{title| upper}}</p>
      </div>
      <div class="abt-counter__inner">
        {% for i in range(1, counters_count) %}
          {% set counter = counters[loop.index0]['#paragraph'] %}

          {% set count_start = counter.field_count_start.value %}
          {% set count_end = counter.field_count_end.value %}
          {% set postfix = counter.field_postfix.value %}
          {% set prefix = counter.field_prefix.value %}
          {% set summary = counter.field_summary.value %}

          <div class="abt-counter__block {{ (loop.index0==0)?" no-space-for-postfix":" " }}">
            <div class="abt-counter__block-counter">
              {% if prefix is not empty %}
                <span class="abt-counter__block-counter-prefix">{{ prefix }}</span>
              {% endif %}
              {% if count_end is not empty and count_end matches '/^\\d+$/' %}
                <span id="counter" class="abt-counter__block-counter-value" data-options='{"startVal":{{ count_start| default(0)  }},"endVal":{{ count_end }},"duration":2000}'>
                  {{ count_start is empty ? 0 : count_start }}
                </span>
              {% endif %}
              {% if postfix is not empty %}
                <span class="abt-counter__block-counter-postfix {{ postfix|length > 1 ? ' small' : '' }}">{{ postfix }}</span>
              {% endif %}
            </div>
            {% if summary is not empty %}
              <div class="abt-counter__block-summary">
                <label for="counter">{{ summary }}</label>
              </div>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>
  {% endblock %}
</div>
